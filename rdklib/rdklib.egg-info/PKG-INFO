Metadata-Version: 1.0
Name: rdklib
Version: 0.0.2
Summary: Rule Development Kit Library for AWS Config
Home-page: https://github.com/awslabs/aws-config-rdklib/
Author: Michael Borchert
Author-email: mborch@amazon.com
License: Apache License Version 2.0
Description: # rdklib
        
        A library for writing custom Rules that:
        * Remove the duplicate code by running the library as a lambda layer
        * Use the same interface than the Service team to be able to lift the same code as Managed Rule
        
        ## Getting Started
        
        ### Install the library locally
        ```
        pip install RDKLib/
        ```
        
        ### Create a rule using the RDK template 
        
        For periodic:
        ```
        rdk create YOUR_RULE_NAME --runtime python3.11-lib --maximum-frequency TwentyFour_Hours
        ```
        
        For scheduled
        ```
        rdk create YOUR_RULE_NAME --runtime python3.11-lib --resource-types YOUR_RESOURCE_TYPE
        ```
        
        ## Dev Guide
        
        ### *class* **ClientFactory**
        
        #### *method* **build_client()**
        
        Create or reuse a boto3 client. It minimizes the number of STS calls by reusing existing client, if already available.
        
        **Request Syntax**
        ```
        response = client_factory.build_client(
            service='string')
        ```
        
        **Parameter**
        * **service** (*string*) [REQUIRED]
        
        The name of the AWS service as boto3 
        
        ### *class* **ConfigRule**
        
        #### *method* **evaluate_parameters()**
        
        Used to analyze the validity of the input parameters of the Config Rule.
        
        **Parameter**
        * **rule_parameters** (*dict*)
        
        The input parameters  of the Config Rule.
        
        **Return Syntax**
        
        If one of the parameters is invalid, raise an InvalidParametersError error.
        ```
        raise InvalidParametersError("Error message to display")
        ```
        
        If the parameters are all valid, return a dict.
        ```
        return valid_rule_parameters
        ```
        
        #### *method* **evaluate_change()**
        
        Used to evaluate Configuration Change triggered rule.
        
        **Parameter**
        * **event**
        
        Lambda event provided by Config.
        
        * **client_factory** (*ClientFactory*)
        
        *ClientFactory* object to be used in this rule.
        
        * **configuration_item** (*dict*)
        
        The full configuration Item, even if oversized.
        
        * **valid_rule_parameters** (*dict*)
        
        The output of the evaluate_parameters() method.
        
        **Return Syntax**
        
        Return an list of *Evaluation* object(s). 
        ```
        return [Evaluation()]
        ```
        It can be an empty list, if no evaluation.
        
        
        #### *method* **evaluate_periodic()**
        
        Used to evaluate Periodic triggered rule.
        
        **Parameter**
        * **event**
        
        Lambda event provided by Config.
        
        * **client_factory** (*ClientFactory*)
        
        *ClientFactory* object to be used in this rule.
        
        * **valid_rule_parameters** (*dict*)
        
        The output of the evaluate_parameters() method.
        
        **Return Syntax**
        
        Return an list of *Evaluation* object(s). 
        ```
        return [Evaluation()]
        ```
        It can be an empty list, if no evaluation.
        
        ### *class* **Evaluation**
        
        Class for the *Evaluation* object.
        
        **Request Syntax**
        ```
        evaluation = Evaluation(
            complianceType='ComplianceType',
            complianceResourceId='string',
            annotation='string',
            complianceResourceType='string')
        ```
        
        **Parameter**
        
        * **complianceType** (*ComplianceType*) [REQUIRED]
        Compliance type of the evaluation.
        
        * **complianceResourceId** (*string*) [OPTIONAL]
        ResourceId of the evaluation. It gets autopopulated for Configuration Change triggered rule.
        
        * **annotation** (*string*) [OPTIONAL]
        Annotation for the evaluation. It gets shorten to 255 characters automatically.
        
        * **complianceResourceType** (*string*) [OPTIONAL]
        ResourceType of the evaluation. It gets autopopulated for Configuration Change triggered rule.
        
        ### *class* **ComplianceType**
        
        Class for the *ComplianceType* object.
        
        **Request Syntax**
        
        Evaluation will display as "Compliant"
        ```
        compliance_type = ComplianceType.COMPLIANT 
        ```
        
        Evaluation will display as "Non Compliant"
        ```
        compliance_type = ComplianceType.NON_COMPLIANT 
        ```
        
        Evaluation will not display:
        ```
        compliance_type = ComplianceType.NOT_APPLICABLE 
        ```
Platform: UNKNOWN
